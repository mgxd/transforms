# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ master, 'maint/*' ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9',  '3.10',  '3.11', '3.12']

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build package
      run: |
        pipx run build
    - name: Determine expected version
      run: |
        python -m venv /tmp/getversion
        source /tmp/getversion/bin/activate
        python -m pip install setuptools_scm

        # Interpolate version
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          TAG=${GITHUB_REF##*/}
        fi
        THISVERSION=$( python -m setuptools_scm )
        THISVERSION=${TAG:-$THISVERSION}
        echo "Expected VERSION: \"${THISVERSION}\""
        echo "THISVERSION=${THISVERSION}" >> ${GITHUB_ENV}

    - name: Install in confined environment [sdist]
      run: |
        python -m venv /tmp/install_sdist
        source /tmp/install_sdist/bin/activate
        python -m pip install --upgrade pip
        python -m pip install dist/nitransforms*.tar.gz
        INSTALLED_VERSION=$(python -c 'import nitransforms; print(nitransforms.__version__, end="")')
        echo "VERSION: \"${THISVERSION}\""
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

    - name: Install in confined environment [wheel]
      run: |
        python -m venv /tmp/install_wheel
        source /tmp/install_wheel/bin/activate
        python -m pip install --upgrade pip
        python -m pip install dist/nitransforms*.whl
        INSTALLED_VERSION=$(python -c 'import nitransforms; print(nitransforms.__version__, end="")')
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

    - name: Install in confined environment [pip install .]
      run: |
        python -m venv /tmp/setup_install
        source /tmp/setup_install/bin/activate
        python -m pip install --upgrade pip wheel
        python -m pip install .
        INSTALLED_VERSION=$(python -c 'import nitransforms; print(nitransforms.__version__, end="")')
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

    - name: Install in confined environment [pip install -e .]
      run: |
        python -m venv /tmp/setup_develop
        source /tmp/setup_develop/bin/activate
        python -m pip install pip
        python -m pip install --upgrade pip wheel
        python -m pip install -e .
        INSTALLED_VERSION=$(python -c 'import nitransforms; print(nitransforms.__version__, end="")')
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

  flake8:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3
      uses: actions/setup-python@v4
    - run: pipx run flake8 nitransforms
